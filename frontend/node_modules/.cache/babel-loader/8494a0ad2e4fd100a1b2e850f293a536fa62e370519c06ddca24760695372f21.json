{"ast":null,"code":"var _jsxFileName = \"/Users/edhuezo-lopez/Desktop/hack4impact/bootcamp-project-2022/frontend/src/components/RecipePage.tsx\",\n  _s = $RefreshSig$();\nimport './recipePage.css';\nimport { useParams } from \"react-router-dom\";\nimport recipes from \"../recipeData\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipePage(props) {\n  _s();\n  const {\n    id\n  } = useParams();\n\n  // state variables\n  const [newIngredient, setNewIngredient] = useState('');\n  const [newInstruction, setNewInstruction] = useState('');\n  const [curr_Recipe, setRecipe] = useState(recipes[0]);\n  const [allInstructions, setAllInstructions] = useState([]);\n  const [allIngredients, setAllIngredients] = useState([]);\n  useEffect(() => {\n    const grabRecipes = async () => {\n      //get request for an external recipe\n      let data = await fetch(\"http://localhost:3001/recipe/\" + id);\n      let recipeData = await data.json();\n      setRecipe(recipeData[0]);\n      setAllIngredients([...recipeData[0].ingredients]);\n      setAllInstructions([...recipeData[0].instructions]);\n    };\n    grabRecipes();\n  }, [id, props.external]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title2\",\n        children: curr_Recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card-img\",\n          src: curr_Recipe.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"card-text\",\n          children: [allInstructions.map(function (name, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 24\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Some random step\",\n            value: newInstruction,\n            onChange: e => {\n              setNewInstruction(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAllInstructions([...allInstructions, newInstruction]),\n            children: \" Add instruction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preparations-title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"card-text\",\n        children: [allIngredients.map(function (name, index) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 36\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"3 cups of mystery juice\"\n          //the value that is inputted will be stored in value, im guessing value is a variable associated with the <input> tag\n          ,\n          value: newIngredient\n          //onChange keeps track of when input tags are updated/interacted with \n          ,\n          onChange: e => {\n            setNewIngredient(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setAllIngredients([...allIngredients, newIngredient]);\n          },\n          children: \"Add Ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(RecipePage, \"x88qECD6tDUtVEaYoZ66OxLQlig=\", false, function () {\n  return [useParams];\n});\n_c = RecipePage;\nRecipePage.defaultProps = {\n  external: false\n};\nvar _c;\n$RefreshReg$(_c, \"RecipePage\");","map":{"version":3,"names":["useParams","recipes","React","useEffect","useState","RecipePage","props","id","newIngredient","setNewIngredient","newInstruction","setNewInstruction","curr_Recipe","setRecipe","allInstructions","setAllInstructions","allIngredients","setAllIngredients","grabRecipes","data","fetch","recipeData","json","ingredients","instructions","external","name","image","map","index","e","target","value","defaultProps"],"sources":["/Users/edhuezo-lopez/Desktop/hack4impact/bootcamp-project-2022/frontend/src/components/RecipePage.tsx"],"sourcesContent":["import {Recipe} from \"../recipeData\"\nimport './recipePage.css'\nimport { useParams } from \"react-router-dom\";\nimport recipes from \"../recipeData\";\nimport React, { ChangeEvent, useEffect, useState } from 'react';\n\n\n    interface RecipePageProps {\n        external?: boolean;\n      }\n\nexport default function RecipePage(props: RecipePageProps){\n\n    const { id } = useParams();\n    \n     // state variables\n     const[newIngredient, setNewIngredient] = useState('');\n     const[newInstruction, setNewInstruction] = useState('');\n     const[curr_Recipe, setRecipe] = useState<Recipe>(recipes[0]);\n     const [allInstructions, setAllInstructions] = useState<any[]>([]);\n     const [allIngredients, setAllIngredients] = useState<any[]>([]);\n     \n        \n\n    useEffect(() => {\n\n      \n\n       \n            \n            \n            const grabRecipes = async () => {\n                //get request for an external recipe\n                let data = await fetch(\"http://localhost:3001/recipe/\" + id);\n                let recipeData = await data.json();\n                setRecipe(recipeData[0]);\n\n                setAllIngredients([...recipeData[0].ingredients])\n                setAllInstructions([...recipeData[0].instructions]);\n            }\n            grabRecipes();\n\n\n        \n      }, [id, props.external]);\n\n   \n\n    \n    return(\n\n        <main>\n        <div className=\"card\">\n            <h1 className=\"title2\">{curr_Recipe.name  }</h1>\n            <div className=\"card-body\">\n                <img className=\"card-img\" src={curr_Recipe.image} /> \n                <ul className=\"card-text\"> \n                \n\n                    {/*}printing allInstruction list {*/}\n                 {allInstructions.map(function(name, index) {\n                return <li key={index}>{name}</li>;\n                    })}\n\n\n                    {/*} code responsbile for storing a new instruction from user input {*/}\n\n                    <input \n                        placeholder= \"Some random step\"\n                        value = {newInstruction}\n                        onChange={(e: ChangeEvent<HTMLInputElement>)  => {\n                            setNewInstruction(e.target.value);}}/>\n\n\n                        {/*} code responsbile for new instruction to allInstructions {*/}\n                    <button onClick={() => setAllInstructions([...allInstructions, newInstruction ])}> Add instruction</button>\n                </ul>\n            </div>\n        </div>\n\n\n        <div className=\"card\">\n            <div className=\"preparations-title\"> \n            <p>Steps</p>\n            </div>\n            <ol className =\"card-text\">\n\n                        {/*} printing all ingredients{*/}\n                        {allIngredients.map(function(name, index) {\n                            return <li key={index}>{name}</li>;\n                        })}\n\n                            {/*responsible for input box that stores a temp variable that is appended to a larger set {*/}\n                                                    <input\n                            placeholder = \"3 cups of mystery juice\"\n                            //the value that is inputted will be stored in value, im guessing value is a variable associated with the <input> tag\n                            value = {newIngredient}\n                            //onChange keeps track of when input tags are updated/interacted with \n                            onChange={(e: ChangeEvent<HTMLInputElement>)  => {\n                                setNewIngredient(e.target.value);\n                            \n                            }}\n                            />\n\n                            {/*} needed to change on change to on click in order to for changes to occur\n                            not sure if i messed someting up or if this was an issue on their part{*/}\n                            <button onClick={() => {setAllIngredients([...allIngredients, newIngredient])}}>Add Ingredient</button>\n            </ol>\n            </div>\n            </main>             \n\n    )\n                            }\n\n\n\nRecipePage.defaultProps = {\n    external: false\n  };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}