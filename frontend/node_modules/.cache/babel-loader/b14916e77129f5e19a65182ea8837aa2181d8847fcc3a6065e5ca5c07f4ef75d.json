{"ast":null,"code":"var _jsxFileName = \"/Users/edhuezo-lopez/Desktop/hack4impact/bootcamp-project-2022/src/components/RecipePage.tsx\",\n  _s = $RefreshSig$();\nimport './recipePage.css';\nimport { useParams } from \"react-router-dom\";\nimport recipes from \"../recipeData\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipePage(props) {\n  _s();\n  const {\n    id\n  } = useParams();\n\n  // state variables\n  const [newIngredient, setNewIngredient] = useState('');\n  const [newInstruction, setNewInstruction] = useState('');\n  const [curr_Recipe, setRecipe] = useState(recipes[0]);\n  console.log(\"id: \", id);\n  useEffect(() => {\n    console.log(\"acutally inside of useEffect\");\n    if (props.external) {\n      console.log(\"external props\");\n      fetch(\"https://bootcamp-milestone-4.onrender.com/recipe/\" + id).then(recipes => recipes.json()).then(object => setRecipe(object[0]));\n      console.log(\"curr recipes in use effect: \", curr_Recipe);\n\n      // make an API call with the url param & setRecipe\n    } else {\n      // query all of your recipe data for the recipe you want & setRecipe\n\n      let target = recipes.find(element => element.name == id);\n      setRecipe(target);\n    }\n  }, [id, props.external]);\n  console.log(\"curr recipe\", curr_Recipe);\n  console.log(\"curr recipe desc!!!!!\", curr_Recipe.instructions);\n\n  //state variables\n  const [allIngredients, setAllIngredients] = useState(curr_Recipe.ingredients);\n  const [allInstructions, setAllInstructions] = useState(curr_Recipe.instructions);\n  console.log(\"all instructions: \", allInstructions);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title2\",\n        children: curr_Recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card-img\",\n          src: curr_Recipe.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"card-text\",\n          children: [allInstructions.map(function (name, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 24\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Some random step\",\n            value: newInstruction,\n            onChange: e => {\n              setNewInstruction(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAllInstructions([...allInstructions, newInstruction]),\n            children: \"Add instruction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preparations-title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"card-text\",\n        children: [allIngredients.map(function (name, index) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 36\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"3 cups of mystery juice\"\n          //the value that is inputted will be stored in value, im guessing value is a variable associated with the <input> tag\n          ,\n          value: newIngredient\n          //onChange keeps track of when input tags are updated/interacted with \n          ,\n          onChange: e => {\n            setNewIngredient(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setAllIngredients([...allIngredients, newIngredient]);\n          },\n          children: \"Add Ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(RecipePage, \"WcdA3CnkObojPhRVyWLzQNVlEok=\", false, function () {\n  return [useParams];\n});\n_c = RecipePage;\nRecipePage.defaultProps = {\n  external: false\n};\nvar _c;\n$RefreshReg$(_c, \"RecipePage\");","map":{"version":3,"names":["useParams","recipes","React","useEffect","useState","RecipePage","props","id","newIngredient","setNewIngredient","newInstruction","setNewInstruction","curr_Recipe","setRecipe","console","log","external","fetch","then","json","object","target","find","element","name","instructions","allIngredients","setAllIngredients","ingredients","allInstructions","setAllInstructions","image","map","index","e","value","defaultProps"],"sources":["/Users/edhuezo-lopez/Desktop/hack4impact/bootcamp-project-2022/src/components/RecipePage.tsx"],"sourcesContent":["import {Recipe} from \"../recipeData\"\nimport './recipePage.css'\nimport { useParams } from \"react-router-dom\";\nimport recipes from \"../recipeData\";\nimport React, { ChangeEvent, useEffect, useState } from 'react';\n\n\n    interface RecipePageProps {\n        external?: boolean;\n      }\n\nexport default function RecipePage(props: RecipePageProps){\n\n    const { id } = useParams();\n\n     // state variables\n     const[newIngredient, setNewIngredient] = useState('');\n     const[newInstruction, setNewInstruction] = useState('');\n     const[curr_Recipe, setRecipe] = useState<Recipe>(recipes[0]);\n     \n     console.log(\"id: \", id)\n    \n    useEffect(() => {\n\n        console.log(\"acutally inside of useEffect\")\n\n        if (props.external) {\n            console.log(\"external props\")\n            \n            fetch(\"https://bootcamp-milestone-4.onrender.com/recipe/\" + id)\n            .then((recipes) => recipes.json())\n            .then((object) => setRecipe(object[0]));\n\n            console.log(\"curr recipes in use effect: \", curr_Recipe)\n\n          // make an API call with the url param & setRecipe\n\n        } else {\n          // query all of your recipe data for the recipe you want & setRecipe\n         \n          \n          let target = recipes.find(element => (element.name == id))!;\n          setRecipe(target)\n\n    \n        }\n      }, [id, props.external]);\n    \n      console.log(\"curr recipe\", curr_Recipe)\n      console.log(\"curr recipe desc!!!!!\", curr_Recipe.instructions)\n\n\n    //state variables\n    const [allIngredients, setAllIngredients] = useState(curr_Recipe!.ingredients);\n    const [allInstructions, setAllInstructions] = useState(curr_Recipe!.instructions);\n    console.log(\"all instructions: \", allInstructions)\n    \n    return(\n\n\n\n        <main>\n\n        <div className=\"card\">\n       \n            <h1 className=\"title2\">{curr_Recipe!.name  }</h1>\n\n            <div className=\"card-body\">\n\n                <img className=\"card-img\" src={curr_Recipe!.image} /> \n\n                <ul className=\"card-text\"> \n                \n\n                    {/*}printing allInstruction list {*/}\n                 {allInstructions.map(function(name, index) {\n                return <li key={index}>{name}</li>;\n                    })}\n\n\n                    {/*} code responsbile for storing a new instruction from user input {*/}\n\n                    <input \n                        placeholder= \"Some random step\"\n                        value = {newInstruction}\n                        onChange={(e: ChangeEvent<HTMLInputElement>)  => {\n                            setNewInstruction(e.target.value);\n                        \n                        }}\n                        />\n\n                        {/*} code responsbile for new instruction to allInstructions {*/}\n                    <button onClick={() => setAllInstructions([...allInstructions, newInstruction ])}> \n                                Add instruction\n                    </button>\n\n\n                </ul>\n            </div>\n        </div>\n\n\n        <div className=\"card\">\n\n            <div className=\"preparations-title\"> \n\n            <p>Steps</p>\n      \n            </div>\n\n\n            <ol className =\"card-text\">\n\n                        {/*} printing all ingredients{*/}\n                        {allIngredients.map(function(name, index) {\n                            return <li key={index}>{name}</li>;\n                        })}\n\n\n                            {/*responsible for input box that stores a temp variable that is appended to a larger set {*/}\n                                                    <input\n                            placeholder = \"3 cups of mystery juice\"\n                            //the value that is inputted will be stored in value, im guessing value is a variable associated with the <input> tag\n                            value = {newIngredient}\n                            //onChange keeps track of when input tags are updated/interacted with \n                            onChange={(e: ChangeEvent<HTMLInputElement>)  => {\n                                setNewIngredient(e.target.value);\n                            \n                            }}\n                            />\n\n                            {/*} needed to change on change to on click in order to for changes to occur\n                            not sure if i messed someting up or if this was an issue on their part{*/}\n                            <button onClick={() => {\n                                setAllIngredients([...allIngredients, newIngredient])}}>\n\n                            Add Ingredient\n                            </button>\n\n            </ol>\n            </div>\n            </main>             \n\n    )\n                            }\n\n\n\nRecipePage.defaultProps = {\n    external: false\n  };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}